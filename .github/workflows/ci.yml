name: CI

on:
  push:
    branches:
      - renovate/*
  pull_request:
    branches:
      - main
  workflow_call:

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint . --max-warnings 0

      - name: Run Prettier
        run: npx prettier --check .

      - name: Run CSpell
        run: npx cspell "**/*.*"

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        node:
          # - 14
          # - 16
          - 18

    name: Build & Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npx lerna run --no-bail build

      - name: Upload Builds
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest' && matrix.node == '18'
        with:
          name: Build
          path: projects/packages

      - name: Run Unit Tests
        run: npx lerna run --no-bail test -- --ci --coverage

      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        if: matrix.os == 'ubuntu-latest' && matrix.node == '18'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage

  e2e:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        node:
          # - 14
          # - 16
          - 18

    needs:
      - build

    name: E2E Test (Node ${{ matrix.node }} on ${{ matrix.os }})

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://registry.npmjs.org/

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: Build

      - name: Install dependencies
        run: npm ci

      - name: Run E2E Tests
        run: npx lerna run --no-bail e2e-test -- --ci
        env:
          E2E_GITHUB_USERNAME: ${{ secrets.E2E_GITHUB_USERNAME }}
          E2E_GITHUB_PAT: ${{ secrets.E2E_GITHUB_PAT }}
          E2E_GITLAB_USERNAME: ${{ secrets.E2E_GITLAB_USERNAME }}
          E2E_GITLAB_PAT: ${{ secrets.E2E_GITLAB_PAT }}
